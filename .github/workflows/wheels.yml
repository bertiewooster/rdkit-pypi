name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
      #, windows-2019, macos-10.15, , ubuntu-20.04
      # ubuntu-20.04,
        os: [macos-10.15]

    steps:
      - uses: actions/checkout@v2

      # - uses: actions/setup-python@v2
        # name: Install Python
        # with:
          # python-version: '3.8'

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: choco install vcpython27 -f -y

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp38-*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD_LINUX: "bash pre_linux.sh" 
          CIBW_ENVIRONMENT_MACOS: "DYLD_LIBRARY_PATH=/usr/local/lib"
          
          # CIBW_BEFORE_BUILD_MACOS: "bash pre_mac.sh" 

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-python@v2
  #       name: Install Python
  #       with:
  #         python-version: '3.8'

  #     - name: Build sdist
  #       run: python setup.py sdist

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: dist/*.tar.gz

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   # upload to PyPI on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  #   # alternatively, to publish when a GitHub Release is created, use the following rule:
  #   # if: github.event_name == 'release' && github.event.action == 'published'
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
  #         # To test: repository_url: https://test.pypi.org/legacy/
